#ifndef CIRCUIT_SMALL_H_
#define CIRCUIT_SMALL_H_

#include <vector>
#include <string>
#include <math.h>
#include <algorithm>

#include "../circuit.h"
#include "racing/collision_detection/occupancy_grid_collision_detector.h"

const std::vector<std::string> map = {
    "###################################################################################################",
    "###################################################################################################",
    "###################################################################################################",
    "###################################################################################################",
    "#######################################################################       #####################",
    "##################################################################                  ###############",
    "################################################################                      #############",
    "##############################################################                         ############",
    "##############################################################                          ###########",
    "###################           ################################                            #########",
    "#################               #############################                              ########",
    "###############                   ##########################                               ########",
    "#############                      #######################                                 ########",
    "############                        #####################                                  ########",
    "###########                          ####################                                   #######",
    "##########                           ###################                                    #######",
    "#########                             #################                                     #######",
    "#########                               ################                                    #######",
    "########                                ##############                                      #######",
    "#######                                  #############                                       ######",
    "#######                                    ###########                    ####                #####",
    "#######                                     #########                    ####                 #####",
    "######                                      #######                      ####                 #####",
    "######                                        ###                        #####                #####",
    "#####                                                                   ######                #####",
    "#####                 ###                                              #######                 ####",
    "#####                 #####                                            ########                 ###",
    "#####                 ######                                          #########                ####",
    "#####                ########                                         ##########                ###",
    "#####                #########                                       ###########                ###",
    "#####                ##########                                      ###########                 ##",
    "#####                ###########                                    ############                 ##",
    "#####                ############                                  #############                 ##",
    "#####                #############                               ###############                 ##",
    "#####                ##############                             #################                 #",
    "#####                ###############                          ####################                #",
    "#####                #################                       #####################                #",
    "#####                ##################                    #######################                #",
    "#####                ####################                #########################                #",
    "#####                #######################      ################################                #",
    "#####                ##############################################################               #",
    "#####                #############################################################                #",
    "#####                ##############################################################               #",
    "#####                ##############################################################               #",
    "#####                 #############################################################               #",
    "#####                 #############################################################               #",
    "#####                 ############################################################                #",
    "######                 ############################################################               #",
    "######                  ############################################################              #",
    "######                  ###########################################################               #",
    "#######                  ###########################################################              #",
    "#######                  ##########################################################               #",
    "########                  ##########################################################              #",
    "########                   ########################################################               #",
    "########                   #######################################################                #",
    "#########                     ################################################                    #",
    "##########                              #######            #########                              #",
    "##########                                                                                        #",
    "###########                                                                                       #",
    "###########                                                                                      ##",
    "############                                                                                     ##",
    "############                                                                                    ###",
    "#############                                                                                  ####",
    "##############                                                                                #####",
    "##############                                                                                #####",
    "###############                                                                              ######",
    "################                                                                           ########",
    "##################                                                                        #########",
    "###################                                                                     ###########",
    "#####################                                                                 #############",
    "#########################                                                          ################",
    "#############################                                                  ####################",
    "###################################################################################################",
    "###################################################################################################",
};

const double cell_size = 0.2;
const double waypoint_radius = 8 * cell_size;
const std::list<math::point> waypoints = {
    math::point(53 * cell_size, 65 * cell_size),
    math::point(70 * cell_size, 14 * cell_size),
    math::point(23 * cell_size, 18 * cell_size),
    math::point(51 * cell_size, 65 * cell_size)
};
const double heading_angle = 0.0 / 180.0 * pi;
const racing::vehicle_position start(53 * cell_size, 65 * cell_size, heading_angle);

#endif